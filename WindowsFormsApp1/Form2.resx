<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>